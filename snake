from turtle import Turtle
STARTING_POSITION = [(0, 0), (-20, 0), (-40, 0)]
MOVE_DISTANCE = 20
UP = 90
DOWN = 270
LEFT = 180
RIGHT = 0

class Snake:
  def __init__(self):
  self.segments = []
  self.create_snake()
  self.head = self.segments[0]

    def create_snake():
        for pos in segments:
            self.add_segments()
    
    def add_segments(self, pos):
        new_segment = Turtle('square') # add a square to the snake body
        new_segment.color('white')
        new_segment.penup()
        new_segment.goto(pos)
        self.segments.append(new_segment)
    
    def reset(self):
        for seg in self.segments:
            seg.goto(1000, 1000) # send the previous snake off screen
        self.segments.clear() # clear all the previous segments
        self.create_snake() # recreate the snake
        self.head = self.segments[0] # reestablish the snake head
    
    def extend(self):
        self.add_segment(self.segments[-1].position()) # adding a block to the end of the snake body after scored point
    
    def move(self):
        for seg_num in range(len(self.segments)-1, 0, -1):
            new_x = self.segments[seg_num -1].xcor() # The last snake block moves to the block in front
            new_y = self.segments[seg_num -1].ycor()
            self.segments[seg_num].goto(new_x, new_y) 
        self.segments.forward(MOVE_DISTANCE) # move the first block forward 20 pixels
        
     def up(self):
        if self.head.heading() != UP:
            self.head.setheading(DOWN)
     
     def down(self):
        if self.head.heading() != DOWN:
            self.head.setheading(UP)
     
     def left(self):
        if self.head.heading() != LEFT:
            self.head.setheading(RIGHT)
     
     def right(self):
        if self.head.heading() != RIGHT:
            self.head.setheading(LEFT)
     
     
        
    
        
